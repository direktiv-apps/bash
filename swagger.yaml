swagger: "2.0"
info:
  description: Ubuntu bash environment
  title: bash
  version: "1.0"
  x-direktiv-meta:
    container: gcr.io/direktiv/apps/bash
    maintainer: |-
      [direktiv.io](https://www.direktiv.io) 
    issues: https://github.com/direktiv-apps/bash/issues
    url: https://github.com/direktiv-apps/bash  
    categories:
    - build
    - misc
    license: |-
      [Apache-2.0](https://www.apache.org/licenses/LICENSE-2.0)
    long-description: >-
      This function provides a Ubuntu 22.04 environment. The following packages are installed:


      - git 
      
      - sed 
      
      - wget 
      
      - grep 
      
      - curl 
      
      - make 
      
      - jq 
      
      - openssh-client

      The function can run multiple commands but if multiple commands have to be chained together or use pipes it requires a 'bash -c' command, e.g. 
      `bash -c 'cd dir && cat file.txt > newfile'`

consumes:
- application/json
produces:
- application/json
schemes:
- http
paths:
  /: 
    delete:
      parameters:
        - name: Direktiv-ActionID
          in: header
          type: string
          description: |
            On cancel Direktiv sends a DELETE request to
            the action with id in the header
      x-direktiv:
        cancel: echo 'cancel {{ .DirektivActionID }}'
      responses:
        200:
    post:
      parameters:
        - name: Direktiv-ActionID
          in: header
          type: string
          default: development
          description: |
            direktiv action id is an UUID. 
            For development it can be set to 'development'
        - name: Direktiv-TempDir
          in: header
          type: string
          default: /tmp
          description: |
            direktiv temp dir is the working directory for that request
            For development it can be set to e.g. '/tmp'
        - name: body
          in: body
          schema:
            type: object
            properties:
              files:
                type: array
                items:
                  $ref: '#/definitions/direktivFile'
                description: File to create before running commands.
              commands:
                type: array
                description: Array of commands.
                items:
                  type: object
                  properties:
                    command:
                      type: string
                      description: Command to run
                      example: ls -la
                    silent: 
                      type: boolean
                      description: If set to false the command will not print output to logs.
                      default: false
                    print: 
                      type: boolean
                      description: If set to false the command will not print the full command with arguments to logs.
                      default: true
                    continue: 
                      type: boolean
                      description: Stops excecution if command fails, otherwise proceeds with next command 
                    envs:
                      type: array
                      description: Environment variables set for each command.
                      example: 
                      - name: MYVALUE
                        value: hello
                      items:
                        type: object
                        properties:
                          name:
                            description: Name of the variable.
                            type: string
                          value:
                            description: Value of the variable.
                            type: string    
      # direktiv code generation is configured here
      x-direktiv-function: |-
        functions:
        - id: bash
          image: gcr.io/direktiv/apps/bash:1.0
          type: knative-workflow
      x-direktiv-examples:
        - title: Basic
          content: |-
            - id: bash
              type: action
              action:
                function: bash
                input: 
                  commands:
                  - command: ls -la
        - title: Using ad-hoc files
          content: |-
            - id: bash
              type: action
              action:
                function: bash
                input: 
                  files:
                  - name: hello.sh
                    data: |-
                      #!/bin/bash
                      echo "Hello World"
                    mode: '0755'
                  commands:
                  - command: ./hello.sh
        - title: Return JSON file
          content: |-
            - id: bash 
              type: action
              action:
                function: bash
                input: 
                  commands:
                  - command: 'bash -c "echo { \\\"hello\\\": \\\"world\\\" } > data.json"'
                  - command: cat data.json
        - title: Pipe
          content: |-
            - id: bash  
              type: action
              action:
                function: bash
                input: 
                  commands:
                  - command: bash -c 'echo "File Data" > myfile.txt'
                  - command: cat myfile.txt
      x-direktiv:  
        cmds:
        - action: foreach
          loop: .Commands
          exec: '{{ .Item.Command }}'
          silent: '{{ .Item.Silent }}'
          print: '{{ .Item.Print }}'
          continue: '{{ .Item.Continue }}'
          runtime-envs: |
            [
            {{- range $index, $element := .Item.Envs }}
            {{- if $index}},{{- end}}
            "{{ $element.Name }}={{ $element.Value }}"
            {{- end }}
            ]
        output: |
          {
            "bash": {{ index . 0 | toJson }}
          }
      x-direktiv-errors:
        io.direktiv.command.error: Command execution failed
        io.direktiv.output.error: Template error for output generation of the service
        io.direktiv.ri.error: Can not create information object from request
      responses:
        200:
          description: List of executed commands.
          examples:
            bash:
            - result: # EXAMPLE RESULT HERE
              success: true
          schema:
            type: object
            properties:
              bash:
                type: array
                items:
                  type: object
                  required:
                  - success
                  - result
                  properties:
                    success:
                      type: boolean
                    result:
                      additionalProperties: {}
        default:
          description: generic error response
          headers:
            Direktiv-ErrorCode:
              type: string
            Direktiv-ErrorMessage:
              type: string
          schema:
            $ref: "#/definitions/error"
definitions:
  direktivFile:
    type: object
    x-go-type:
      type: DirektivFile
      import:
        package: github.com/direktiv/apps/go/pkg/apps 
  error:
    type: object
    required:
      - errorCode
      - errorMessage
    properties:
      errorCode:
        type: string
      errorMessage:
        type: string
